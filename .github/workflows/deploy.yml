name: Test and Deploy Cloud Resume

on:
  push:
    branches:
      - main
    paths:
      - '**.py'
      - '**.tf'
      - '**.tfvars'
      - 'src/lambda/**'
      - 'tests/**'
  pull_request:
    branches:
      - main

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Install test dependencies
        pip install pytest boto3 moto

    - name: Run Python tests
      run: |
        # Add lambda directory to Python path and create __init__.py files
        touch src/lambda/__init__.py
        touch tests/__init__.py
        export PYTHONPATH="${PYTHONPATH}:${PWD}/src/lambda:${PWD}"
        cd tests
        python -m pytest . -v
        cd ..

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: us-west-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.5


    - name: Terraform Format Check
      run: |
        cd terraform
        terraform fmt -check
        cd ..

    - name: Terraform Init
      run: |
        cd terraform
        terraform init
        cd ..

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate
        cd ..

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -out=tfplan
        cd ..

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd terraform
        terraform apply -auto-approve tfplan
        cd ..

    - name: Clean up
      if: always()
      run: |
        rm -f terraform/tfplan
